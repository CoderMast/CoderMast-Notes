export const data = JSON.parse("{\"key\":\"v-e0b06004\",\"path\":\"/java/base/java-base-final.html\",\"title\":\"Final关键字的用法及加载时机\",\"lang\":\"zh-CN\",\"frontmatter\":{\"description\":\"Final关键字的用法及加载时机 修饰变量 final关键字修饰变量表示该变量一经初始化，则无法被修改。 基本类型和String类型：这类一般都是通过字面量进行赋值，一经初始化无法改变。 其他引用类型：这种类型我们无法改变常量指向的引用，但是仍然可以改变引用指向的对象，即引用指向的地址。 静态常量和对象常量 这里根据是否被static修饰可以将常量分为两类： 被final和static关键字同时修饰的变量\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://www.codermast.com/java/base/java-base-final.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"CoderMast编程学习笔记\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"Final关键字的用法及加载时机\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"Final关键字的用法及加载时机 修饰变量 final关键字修饰变量表示该变量一经初始化，则无法被修改。 基本类型和String类型：这类一般都是通过字面量进行赋值，一经初始化无法改变。 其他引用类型：这种类型我们无法改变常量指向的引用，但是仍然可以改变引用指向的对象，即引用指向的地址。 静态常量和对象常量 这里根据是否被static修饰可以将常量分为两类： 被final和static关键字同时修饰的变量\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"CoderMast\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"Final关键字的用法及加载时机\\\",\\\"image\\\":[\\\"\\\"],\\\"dateModified\\\":null,\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"CoderMast\\\",\\\"url\\\":\\\"https://www.codermast.com\\\",\\\"email\\\":\\\"codermast@qq.com\\\"}]}\"]]},\"headers\":[{\"level\":2,\"title\":\"修饰变量\",\"slug\":\"修饰变量\",\"link\":\"#修饰变量\",\"children\":[{\"level\":3,\"title\":\"静态常量和对象常量\",\"slug\":\"静态常量和对象常量\",\"link\":\"#静态常量和对象常量\",\"children\":[]},{\"level\":3,\"title\":\"常量的初始化方式\",\"slug\":\"常量的初始化方式\",\"link\":\"#常量的初始化方式\",\"children\":[]},{\"level\":3,\"title\":\"常量的初始化过程\",\"slug\":\"常量的初始化过程\",\"link\":\"#常量的初始化过程\",\"children\":[]},{\"level\":3,\"title\":\"ConstantValue属性\",\"slug\":\"constantvalue属性\",\"link\":\"#constantvalue属性\",\"children\":[]}]},{\"level\":2,\"title\":\"修饰方法\",\"slug\":\"修饰方法\",\"link\":\"#修饰方法\",\"children\":[]},{\"level\":2,\"title\":\"修饰类\",\"slug\":\"修饰类\",\"link\":\"#修饰类\",\"children\":[]}],\"readingTime\":{\"minutes\":5.68,\"words\":1704},\"filePathRelative\":\"java/base/java-base-final.md\",\"excerpt\":\"<h1> Final关键字的用法及加载时机</h1>\\n<h2> 修饰变量</h2>\\n<p>final关键字修饰变量表示该变量一经初始化，则无法被修改。</p>\\n<ul>\\n<li>基本类型和String类型：这类一般都是通过字面量进行赋值，一经初始化无法改变。</li>\\n<li>其他引用类型：这种类型我们无法改变常量指向的引用，但是仍然可以改变引用指向的对象，即引用指向的地址。</li>\\n</ul>\\n<h3> 静态常量和对象常量</h3>\\n<p>这里根据是否被static修饰可以将常量分为两类：</p>\\n<ol>\\n<li><strong>被final和static关键字同时修饰的变量</strong></li>\\n</ol>\",\"autoDesc\":true}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
