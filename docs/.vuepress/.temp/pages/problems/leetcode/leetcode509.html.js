export const data = JSON.parse("{\"key\":\"v-66839488\",\"path\":\"/problems/leetcode/leetcode509.html\",\"title\":\"509. 斐波那契数\",\"lang\":\"zh-CN\",\"frontmatter\":{\"order\":509,\"description\":\"509. 斐波那契数 题目描述 斐波那契数 （通常用 F(n) 表示）形成的序列称为 斐波那契数列 。该数列由 0 和 1 开始，后面的每一项数字都是前面两项数字的和。也就是： F(0) = 0，F(1) = 1 F(n) = F(n - 1) + F(n - 2)，其中 n &gt; 1 给定 n ，请计算 F(n) 。 示例 1： 输入：n = 2 输出：1 解释：F(2) = F(1) + F(0) = 1 + 0 = 1 示例 2： 输入：n = 3 输出：2 解释：F(3) = F(2) + F(1) = 1 + 1 = 2\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://www.codermast.com/problems/leetcode/leetcode509.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"CoderMast编程学习笔记\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"509. 斐波那契数\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"509. 斐波那契数 题目描述 斐波那契数 （通常用 F(n) 表示）形成的序列称为 斐波那契数列 。该数列由 0 和 1 开始，后面的每一项数字都是前面两项数字的和。也就是： F(0) = 0，F(1) = 1 F(n) = F(n - 1) + F(n - 2)，其中 n &gt; 1 给定 n ，请计算 F(n) 。 示例 1： 输入：n = 2 输出：1 解释：F(2) = F(1) + F(0) = 1 + 0 = 1 示例 2： 输入：n = 3 输出：2 解释：F(3) = F(2) + F(1) = 1 + 1 = 2\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"CoderMast\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"509. 斐波那契数\\\",\\\"image\\\":[\\\"\\\"],\\\"dateModified\\\":null,\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"CoderMast\\\",\\\"url\\\":\\\"https://www.codermast.com\\\",\\\"email\\\":\\\"codermast@qq.com\\\"}]}\"]]},\"headers\":[{\"level\":2,\"title\":\"题目描述\",\"slug\":\"题目描述\",\"link\":\"#题目描述\",\"children\":[]},{\"level\":2,\"title\":\"题目地址\",\"slug\":\"题目地址\",\"link\":\"#题目地址\",\"children\":[]},{\"level\":2,\"title\":\"解题思路\",\"slug\":\"解题思路\",\"link\":\"#解题思路\",\"children\":[{\"level\":3,\"title\":\"方法1️⃣：递归法\",\"slug\":\"方法1️⃣-递归法\",\"link\":\"#方法1️⃣-递归法\",\"children\":[]},{\"level\":3,\"title\":\"方法2️⃣：动态规划法1：（使用dp数组进行记录）\",\"slug\":\"方法2️⃣-动态规划法1-使用dp数组进行记录\",\"link\":\"#方法2️⃣-动态规划法1-使用dp数组进行记录\",\"children\":[]},{\"level\":3,\"title\":\"方法3️⃣：动态规划法2：（使用dp数组进行记录）\",\"slug\":\"方法3️⃣-动态规划法2-使用dp数组进行记录\",\"link\":\"#方法3️⃣-动态规划法2-使用dp数组进行记录\",\"children\":[]}]}],\"readingTime\":{\"minutes\":2.5,\"words\":751},\"filePathRelative\":\"problems/leetcode/leetcode509.md\",\"excerpt\":\"<h1> 509. 斐波那契数</h1>\\n<h2> 题目描述</h2>\\n<p>斐波那契数 （通常用 F(n) 表示）形成的序列称为 斐波那契数列 。该数列由 0 和 1 开始，后面的每一项数字都是前面两项数字的和。也就是：</p>\\n<p>F(0) = 0，F(1) = 1\\nF(n) = F(n - 1) + F(n - 2)，其中 n &gt; 1\\n给定 n ，请计算 F(n) 。</p>\\n<p>示例 1：</p>\\n<p>输入：n = 2\\n输出：1\\n解释：F(2) = F(1) + F(0) = 1 + 0 = 1</p>\\n<p>示例 2：\\n输入：n = 3\\n输出：2\\n解释：F(3) = F(2) + F(1) = 1 + 1 = 2</p>\",\"autoDesc\":true}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
