export const data = JSON.parse("{\"key\":\"v-7ffb8e61\",\"path\":\"/database/redis/redis-principle-IO.html\",\"title\":\"Redis原理 - IO详解\",\"lang\":\"zh-CN\",\"frontmatter\":{\"order\":28,\"description\":\"Redis原理 - IO详解 用户空间与内核空间 任何Linux 系统的发行版，其系统内核都是 Linux 。我们的应用都需要通过 Linux 内核与硬件交互。 为了避免用户应用导致冲突甚至内核崩溃，用户应用与内核是分离的： 内存的寻址空间划分为两部分：内核空间、用户空间 32 位的操作系统，寻址地址就为 0 ~ 232\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://www.codermast.com/database/redis/redis-principle-IO.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"CoderMast编程桅杆\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"Redis原理 - IO详解\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"Redis原理 - IO详解 用户空间与内核空间 任何Linux 系统的发行版，其系统内核都是 Linux 。我们的应用都需要通过 Linux 内核与硬件交互。 为了避免用户应用导致冲突甚至内核崩溃，用户应用与内核是分离的： 内存的寻址空间划分为两部分：内核空间、用户空间 32 位的操作系统，寻址地址就为 0 ~ 232\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"CoderMast\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"Redis原理 - IO详解\\\",\\\"image\\\":[\\\"\\\"],\\\"dateModified\\\":null,\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"CoderMast\\\",\\\"url\\\":\\\"https://www.codermast.com\\\",\\\"email\\\":\\\"codermast@qq.com\\\"}]}\"]]},\"headers\":[{\"level\":2,\"title\":\"用户空间与内核空间\",\"slug\":\"用户空间与内核空间\",\"link\":\"#用户空间与内核空间\",\"children\":[]},{\"level\":2,\"title\":\"阻塞IO\",\"slug\":\"阻塞io\",\"link\":\"#阻塞io\",\"children\":[]},{\"level\":2,\"title\":\"非阻塞IO\",\"slug\":\"非阻塞io\",\"link\":\"#非阻塞io\",\"children\":[]},{\"level\":2,\"title\":\"IO多路复用\",\"slug\":\"io多路复用\",\"link\":\"#io多路复用\",\"children\":[{\"level\":3,\"title\":\"SELECT\",\"slug\":\"select\",\"link\":\"#select\",\"children\":[]},{\"level\":3,\"title\":\"POLL\",\"slug\":\"poll\",\"link\":\"#poll\",\"children\":[]},{\"level\":3,\"title\":\"EPOLL\",\"slug\":\"epoll\",\"link\":\"#epoll\",\"children\":[]},{\"level\":3,\"title\":\"事件通知机制\",\"slug\":\"事件通知机制\",\"link\":\"#事件通知机制\",\"children\":[]},{\"level\":3,\"title\":\"WEB服务流程\",\"slug\":\"web服务流程\",\"link\":\"#web服务流程\",\"children\":[]},{\"level\":3,\"title\":\"总结\",\"slug\":\"总结\",\"link\":\"#总结\",\"children\":[]}]},{\"level\":2,\"title\":\"信号驱动IO\",\"slug\":\"信号驱动io\",\"link\":\"#信号驱动io\",\"children\":[]},{\"level\":2,\"title\":\"异步IO\",\"slug\":\"异步io\",\"link\":\"#异步io\",\"children\":[]},{\"level\":2,\"title\":\"同步和异步\",\"slug\":\"同步和异步\",\"link\":\"#同步和异步\",\"children\":[]}],\"readingTime\":{\"minutes\":9.9,\"words\":2971},\"filePathRelative\":\"database/redis/redis-principle-IO.md\",\"excerpt\":\"<h1> Redis原理 - IO详解</h1>\\n<h2> 用户空间与内核空间</h2>\\n<p>任何Linux 系统的发行版，其系统内核都是 Linux 。我们的应用都需要通过 Linux 内核与硬件交互。</p>\\n<figure><figcaption></figcaption></figure>\\n<p>为了避免用户应用导致冲突甚至内核崩溃，用户应用与内核是分离的：</p>\\n<ul>\\n<li>内存的寻址空间划分为两部分：内核空间、用户空间</li>\\n</ul>\\n<blockquote>\\n<p>32 位的操作系统，寻址地址就为 0 ~ <span class=\\\"katex\\\"><span class=\\\"katex-mathml\\\"></span><span class=\\\"katex-html\\\" aria-hidden=\\\"true\\\"><span class=\\\"base\\\"><span class=\\\"strut\\\" style=\\\"height:0.8141em;\\\"></span><span class=\\\"mord\\\"><span class=\\\"mord\\\">2</span><span class=\\\"msupsub\\\"><span class=\\\"vlist-t\\\"><span class=\\\"vlist-r\\\"><span class=\\\"vlist\\\" style=\\\"height:0.8141em;\\\"><span style=\\\"top:-3.063em;margin-right:0.05em;\\\"><span class=\\\"pstrut\\\" style=\\\"height:2.7em;\\\"></span><span class=\\\"sizing reset-size6 size3 mtight\\\"><span class=\\\"mord mtight\\\"><span class=\\\"mord mtight\\\">32</span></span></span></span></span></span></span></span></span></span></span></span></p>\\n</blockquote>\",\"autoDesc\":true}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
