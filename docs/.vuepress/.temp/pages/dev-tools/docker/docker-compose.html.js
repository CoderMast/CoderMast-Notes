export const data = JSON.parse("{\"key\":\"v-6be43eec\",\"path\":\"/dev-tools/docker/docker-compose.html\",\"title\":\"Docker - Compose\",\"lang\":\"zh-CN\",\"frontmatter\":{\"order\":10,\"description\":\"Docker - Compose 在部署应用时，常常使用到不止一个容器，那么在部署容器的时候就需要一个一个进行部署，这样的部署过程也相对来说比较繁琐复杂，也容易出问题，那么有没有一种更为简单的方法呢？ Compose简介 Compose 是用于定义和运行多容器 Docker 应用程序的工具。Docker Compose 通过一个单独的 docker-compose.yml 模板文件（YAML格式）来定义一组相关联的应用容器，帮助我们实现多个相关联的 Docker 容器的快速部署。\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://www.codermast.com/dev-tools/docker/docker-compose.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"CoderMast编程桅杆\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"Docker - Compose\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"Docker - Compose 在部署应用时，常常使用到不止一个容器，那么在部署容器的时候就需要一个一个进行部署，这样的部署过程也相对来说比较繁琐复杂，也容易出问题，那么有没有一种更为简单的方法呢？ Compose简介 Compose 是用于定义和运行多容器 Docker 应用程序的工具。Docker Compose 通过一个单独的 docker-compose.yml 模板文件（YAML格式）来定义一组相关联的应用容器，帮助我们实现多个相关联的 Docker 容器的快速部署。\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"友人CoderMast\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"Docker - Compose\\\",\\\"image\\\":[\\\"\\\"],\\\"dateModified\\\":null,\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"友人CoderMast\\\",\\\"url\\\":\\\"https://www.codermast.com\\\",\\\"email\\\":\\\"codermast@163.com\\\"}]}\"]]},\"headers\":[{\"level\":2,\"title\":\"Compose简介\",\"slug\":\"compose简介\",\"link\":\"#compose简介\",\"children\":[]},{\"level\":2,\"title\":\"Compose安装\",\"slug\":\"compose安装\",\"link\":\"#compose安装\",\"children\":[]},{\"level\":2,\"title\":\"Compose样例\",\"slug\":\"compose样例\",\"link\":\"#compose样例\",\"children\":[]},{\"level\":2,\"title\":\"Compose基本命令\",\"slug\":\"compose基本命令\",\"link\":\"#compose基本命令\",\"children\":[]},{\"level\":2,\"title\":\"Compose文件结构\",\"slug\":\"compose文件结构\",\"link\":\"#compose文件结构\",\"children\":[]},{\"level\":2,\"title\":\"Compose高级应用\",\"slug\":\"compose高级应用\",\"link\":\"#compose高级应用\",\"children\":[]}],\"readingTime\":{\"minutes\":4.85,\"words\":1455},\"filePathRelative\":\"dev-tools/docker/docker-compose.md\",\"excerpt\":\"<h1> Docker - Compose</h1>\\n<p>在部署应用时，常常使用到不止一个容器，那么在部署容器的时候就需要一个一个进行部署，这样的部署过程也相对来说比较繁琐复杂，也容易出问题，那么有没有一种更为简单的方法呢？</p>\\n<h2> Compose简介</h2>\\n<figure><figcaption></figcaption></figure>\\n<p>Compose 是用于定义和运行多容器 Docker 应用程序的工具。Docker Compose 通过一个单独的 docker-compose.yml 模板文件（YAML格式）来定义一组相关联的应用容器，帮助我们实现多个相关联的 Docker 容器的快速部署。</p>\",\"autoDesc\":true}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
