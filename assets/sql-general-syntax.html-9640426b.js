import{_ as a,W as e,X as i,Y as l}from"./framework-a0cce298.js";const d={},r=l('<h1 id="sql基础语法" tabindex="-1"><a class="header-anchor" href="#sql基础语法" aria-hidden="true">#</a> SQL基础语法</h1><h2 id="通用语法" tabindex="-1"><a class="header-anchor" href="#通用语法" aria-hidden="true">#</a> 通用语法</h2><ol><li>SQL语句可以单行或者多行书写，以分号结尾。</li><li>SQL语句可以使用空格/缩进符来增强语句的可读性。</li><li>MySQL数据库的SQL语言不区分大小写，关键字建议使用大写。</li><li>注释</li></ol><div class="hint-container info"><p class="hint-container-title">注释</p><ul><li>单行注释：-- 注释内容 或者 # 注释内容(MySQL特有的语法)</li><li>多行注释：使用/* 注释内容 */</li></ul></div><h2 id="sql分类" tabindex="-1"><a class="header-anchor" href="#sql分类" aria-hidden="true">#</a> SQL分类</h2><ul><li>DDL</li></ul><p>Data Definition Language 数据定义语言，用来定义数据库对象（数据库、数据表、字段）</p><ul><li>DML</li></ul><p>Data Manipulation Language 数据操作语言，用来对数据库表中的数据进行增删改</p><ul><li>DQL</li></ul><p>Data Query Language 数据查询语言，用来对数据库中的数据进行查询操作</p><ul><li>DCL</li></ul><p>Data Control Language 数据控制语言，用来创建数据库用户、控制数据表的访问权限</p><h2 id="ddl语句" tabindex="-1"><a class="header-anchor" href="#ddl语句" aria-hidden="true">#</a> DDL语句</h2><h3 id="数据库操作" tabindex="-1"><a class="header-anchor" href="#数据库操作" aria-hidden="true">#</a> 数据库操作</h3><h3 id="数据表操作" tabindex="-1"><a class="header-anchor" href="#数据表操作" aria-hidden="true">#</a> 数据表操作</h3><h3 id="字段操作" tabindex="-1"><a class="header-anchor" href="#字段操作" aria-hidden="true">#</a> 字段操作</h3><h2 id="dml语句" tabindex="-1"><a class="header-anchor" href="#dml语句" aria-hidden="true">#</a> DML语句</h2><h2 id="dql语句" tabindex="-1"><a class="header-anchor" href="#dql语句" aria-hidden="true">#</a> DQL语句</h2><h2 id="dcl语句" tabindex="-1"><a class="header-anchor" href="#dcl语句" aria-hidden="true">#</a> DCL语句</h2>',20),h=[r];function n(t,s){return e(),i("div",null,h)}const o=a(d,[["render",n],["__file","sql-general-syntax.html.vue"]]);export{o as default};
