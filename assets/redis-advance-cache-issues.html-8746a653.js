const e=JSON.parse('{"key":"v-20c7d348","path":"/database/redis/redis-advance-cache-issues.html","title":"Redis进阶 - 缓存问题","lang":"zh-CN","frontmatter":{"order":13,"description":"缓存 缓存就是数据交换的缓冲区（Cache），是存储数据的临时地方，一般读写性能比较高。 例如; 1. 内存是硬盘的缓存 2. cache 是内存的缓存 作用; 1. 降低后端负载 2. 提高读写效率，降低响应时间 成本; 1. 数据一致性成本 2. 代码维护成本 缓存穿透 缓存穿透是指客户端请求的数据在缓存中和数据库中都不存在，这样缓存永远不会生效，...","head":[["meta",{"property":"og:url","content":"https://www.codermast.com/database/redis/redis-advance-cache-issues.html"}],["meta",{"property":"og:site_name","content":"CoderMast编程桅杆"}],["meta",{"property":"og:title","content":"Redis进阶 - 缓存问题"}],["meta",{"property":"og:description","content":"缓存 缓存就是数据交换的缓冲区（Cache），是存储数据的临时地方，一般读写性能比较高。 例如; 1. 内存是硬盘的缓存 2. cache 是内存的缓存 作用; 1. 降低后端负载 2. 提高读写效率，降低响应时间 成本; 1. 数据一致性成本 2. 代码维护成本 缓存穿透 缓存穿透是指客户端请求的数据在缓存中和数据库中都不存在，这样缓存永远不会生效，..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-23T07:39:49.000Z"}],["meta",{"property":"article:author","content":"友人"}],["meta",{"property":"article:modified_time","content":"2023-06-23T07:39:49.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Redis进阶 - 缓存问题\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-06-23T07:39:49.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"友人\\",\\"url\\":\\"https://www.codermast.com\\",\\"email\\":\\"codermast@163.com\\"}]}"]]},"headers":[{"level":2,"title":"缓存","slug":"缓存","link":"#缓存","children":[]},{"level":2,"title":"缓存穿透","slug":"缓存穿透","link":"#缓存穿透","children":[]},{"level":2,"title":"缓存雪崩","slug":"缓存雪崩","link":"#缓存雪崩","children":[]},{"level":2,"title":"缓存击穿","slug":"缓存击穿","link":"#缓存击穿","children":[]},{"level":2,"title":"缓存污染","slug":"缓存污染","link":"#缓存污染","children":[]},{"level":2,"title":"缓存更新策略","slug":"缓存更新策略","link":"#缓存更新策略","children":[{"level":3,"title":"主动更新策略","slug":"主动更新策略","link":"#主动更新策略","children":[]}]},{"level":2,"title":"缓存淘汰策略","slug":"缓存淘汰策略","link":"#缓存淘汰策略","children":[]}],"git":{"createdTime":1687505989000,"updatedTime":1687505989000,"contributors":[{"name":"codermast","email":"codermast@qq.com","commits":1}]},"readingTime":{"minutes":5.55,"words":1666},"filePathRelative":"database/redis/redis-advance-cache-issues.md","localizedDate":"2023年6月23日","autoDesc":true,"excerpt":""}');export{e as data};
