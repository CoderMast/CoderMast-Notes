const t=JSON.parse('{"key":"v-b9412328","path":"/spring-series/spring/spring-data-validation.html","title":"Spring - 数据校验","lang":"zh-CN","frontmatter":{"order":12,"description":"Spring - 数据校验 在开发中，我们经常遇到参数校验的需求，比如用户注册的时候，要校验用户名不能为空、用户名长度不超过20个字符、手机号是合法的手机号格式等等。如果使用普通方式，我们会把校验的代码和真正的业务处理逻辑耦合在一起，而且如果未来要新增一种校验逻辑也需要在修改多个地方。而spring validation允许通过注解的方式来定义对象校验规则，把校验和业务逻辑分离开，让代码编写更加方便。Spring Validation其实就是对Hibernate Validator进一步的封装，方便在Spring中使用。 在Spring中有多种校验的方式","head":[["meta",{"property":"og:url","content":"https://www.codermast.com/spring-series/spring/spring-data-validation.html"}],["meta",{"property":"og:site_name","content":"CoderMast编程桅杆"}],["meta",{"property":"og:title","content":"Spring - 数据校验"}],["meta",{"property":"og:description","content":"Spring - 数据校验 在开发中，我们经常遇到参数校验的需求，比如用户注册的时候，要校验用户名不能为空、用户名长度不超过20个字符、手机号是合法的手机号格式等等。如果使用普通方式，我们会把校验的代码和真正的业务处理逻辑耦合在一起，而且如果未来要新增一种校验逻辑也需要在修改多个地方。而spring validation允许通过注解的方式来定义对象校验规则，把校验和业务逻辑分离开，让代码编写更加方便。Spring Validation其实就是对Hibernate Validator进一步的封装，方便在Spring中使用。 在Spring中有多种校验的方式"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-03T03:14:24.000Z"}],["meta",{"property":"article:author","content":"CoderMast"}],["meta",{"property":"article:modified_time","content":"2024-01-03T03:14:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Spring - 数据校验\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-01-03T03:14:24.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"CoderMast\\",\\"url\\":\\"https://www.codermast.com\\",\\"email\\":\\"codermast@163.com\\"}]}"]]},"headers":[{"level":2,"title":"通过Validator接口实现","slug":"通过validator接口实现","link":"#通过validator接口实现","children":[]},{"level":2,"title":"Bean Validation注解实现","slug":"bean-validation注解实现","link":"#bean-validation注解实现","children":[]},{"level":2,"title":"基于方法实现校验","slug":"基于方法实现校验","link":"#基于方法实现校验","children":[]},{"level":2,"title":"实现自定义校验","slug":"实现自定义校验","link":"#实现自定义校验","children":[]}],"git":{"createdTime":1704251089000,"updatedTime":1704251664000,"contributors":[{"name":"codermast","email":"codermast@qq.com","commits":2}]},"readingTime":{"minutes":5.11,"words":1534},"filePathRelative":"spring-series/spring/spring-data-validation.md","localizedDate":"2024年1月3日","excerpt":"<h1> Spring - 数据校验</h1>\\n<p>在开发中，我们经常遇到参数校验的需求，比如用户注册的时候，要校验用户名不能为空、用户名长度不超过20个字符、手机号是合法的手机号格式等等。如果使用普通方式，我们会把校验的代码和真正的业务处理逻辑耦合在一起，而且如果未来要新增一种校验逻辑也需要在修改多个地方。而spring validation允许通过注解的方式来定义对象校验规则，把校验和业务逻辑分离开，让代码编写更加方便。Spring Validation其实就是对Hibernate Validator进一步的封装，方便在Spring中使用。</p>\\n<p>在Spring中有多种校验的方式</p>","autoDesc":true}');export{t as data};
