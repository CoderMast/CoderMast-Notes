const e=JSON.parse('{"key":"v-a63a099a","path":"/java/core/class-and-object.html","title":"Java核心 - 面向对象","lang":"zh-CN","frontmatter":{"order":3,"description":"面向对象（Object-Oriented，OOP）是一种程序设计的编程范式，主要基于对象这个概念，将相关的数据和方法组织成一个整体看待，本质上是模拟现实中解决问题的过程。 面向对象三个特性 面向对象的三大基本特征是：封装、继承、多态 封装 封装是将对象的属性和方法封装在一个类的内部，对外部隐藏对象的具体实现细节。通过封装，对象的内部实现对外部是不可见的...","head":[["meta",{"property":"og:url","content":"https://www.codermast.com/java/core/class-and-object.html"}],["meta",{"property":"og:site_name","content":"CoderMast编程桅杆"}],["meta",{"property":"og:title","content":"Java核心 - 面向对象"}],["meta",{"property":"og:description","content":"面向对象（Object-Oriented，OOP）是一种程序设计的编程范式，主要基于对象这个概念，将相关的数据和方法组织成一个整体看待，本质上是模拟现实中解决问题的过程。 面向对象三个特性 面向对象的三大基本特征是：封装、继承、多态 封装 封装是将对象的属性和方法封装在一个类的内部，对外部隐藏对象的具体实现细节。通过封装，对象的内部实现对外部是不可见的..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-22T04:33:38.000Z"}],["meta",{"property":"article:author","content":"友人"}],["meta",{"property":"article:modified_time","content":"2024-03-22T04:33:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java核心 - 面向对象\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-22T04:33:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"友人\\",\\"url\\":\\"https://www.codermast.com\\",\\"email\\":\\"codermast@163.com\\"}]}"]]},"headers":[{"level":2,"title":"面向对象三个特性","slug":"面向对象三个特性","link":"#面向对象三个特性","children":[{"level":3,"title":"封装","slug":"封装","link":"#封装","children":[]},{"level":3,"title":"继承","slug":"继承","link":"#继承","children":[]},{"level":3,"title":"多态","slug":"多态","link":"#多态","children":[]}]},{"level":2,"title":"类和对象","slug":"类和对象","link":"#类和对象","children":[{"level":3,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":3,"title":"内部类","slug":"内部类","link":"#内部类","children":[]},{"level":3,"title":"创建对象","slug":"创建对象","link":"#创建对象","children":[]}]},{"level":2,"title":"属性","slug":"属性","link":"#属性","children":[]},{"level":2,"title":"方法","slug":"方法","link":"#方法","children":[{"level":3,"title":"方法的分类","slug":"方法的分类","link":"#方法的分类","children":[]},{"level":3,"title":"方法的调用","slug":"方法的调用","link":"#方法的调用","children":[]},{"level":3,"title":"方法的重载和重写","slug":"方法的重载和重写","link":"#方法的重载和重写","children":[]},{"level":3,"title":"可变参数","slug":"可变参数","link":"#可变参数","children":[]},{"level":3,"title":"构造方法","slug":"构造方法","link":"#构造方法","children":[]}]},{"level":2,"title":"接口和抽象类","slug":"接口和抽象类","link":"#接口和抽象类","children":[{"level":3,"title":"接口","slug":"接口","link":"#接口","children":[]},{"level":3,"title":"抽象类","slug":"抽象类","link":"#抽象类","children":[]},{"level":3,"title":"接口和抽象类的区别","slug":"接口和抽象类的区别","link":"#接口和抽象类的区别","children":[]}]}],"git":{"createdTime":1711082018000,"updatedTime":1711082018000,"contributors":[{"name":"codermast","email":"codermast@qq.com","commits":1}]},"readingTime":{"minutes":15.95,"words":4784},"filePathRelative":"java/core/class-and-object.md","localizedDate":"2024年3月22日","autoDesc":true,"excerpt":""}');export{e as data};
