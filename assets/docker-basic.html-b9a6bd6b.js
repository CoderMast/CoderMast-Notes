const e=JSON.parse('{"key":"v-c94937a4","path":"/dev-tools/docker/docker-basic.html","title":"Docker - 入门基础","lang":"zh-CN","frontmatter":{"order":4,"description":"Docker架构 Docker 使用的是客户端-服务端（C/S）架构模式，使用远程 API 来管理和创建 Docker 容器。 Docker 客户端与 Docker 守护进程，负责构建、运行和 分发 Docker 容器。Docker 客户端和守护程序可以 在同一系统上运行，或者您可以将 Docker 客户端连接到远程 Docker 守护进程。Docke...","head":[["meta",{"property":"og:url","content":"https://www.codermast.com/dev-tools/docker/docker-basic.html"}],["meta",{"property":"og:site_name","content":"CoderMast编程桅杆"}],["meta",{"property":"og:title","content":"Docker - 入门基础"}],["meta",{"property":"og:description","content":"Docker架构 Docker 使用的是客户端-服务端（C/S）架构模式，使用远程 API 来管理和创建 Docker 容器。 Docker 客户端与 Docker 守护进程，负责构建、运行和 分发 Docker 容器。Docker 客户端和守护程序可以 在同一系统上运行，或者您可以将 Docker 客户端连接到远程 Docker 守护进程。Docke..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-11T15:18:22.000Z"}],["meta",{"property":"article:author","content":"友人"}],["meta",{"property":"article:modified_time","content":"2024-01-11T15:18:22.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Docker - 入门基础\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-01-11T15:18:22.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"友人\\",\\"url\\":\\"https://www.codermast.com\\",\\"email\\":\\"codermast@163.com\\"}]}"]]},"headers":[{"level":2,"title":"Docker架构","slug":"docker架构","link":"#docker架构","children":[]},{"level":2,"title":"Docker镜像加速","slug":"docker镜像加速","link":"#docker镜像加速","children":[]},{"level":2,"title":"样例剖析","slug":"样例剖析","link":"#样例剖析","children":[]}],"git":{"createdTime":1704899858000,"updatedTime":1704986302000,"contributors":[{"name":"codermast","email":"codermast@qq.com","commits":2}]},"readingTime":{"minutes":2.77,"words":830},"filePathRelative":"dev-tools/docker/docker-basic.md","localizedDate":"2024年1月10日","autoDesc":true,"excerpt":""}');export{e as data};
