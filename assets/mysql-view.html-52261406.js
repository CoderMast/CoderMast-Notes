const e=JSON.parse('{"key":"v-524a0e21","path":"/database/mysql/mysql-view.html","title":"MySQL进阶 - 视图","lang":"zh-CN","frontmatter":{"order":16,"description":"MySQL进阶 - 视图 介绍和基本语法 介绍 视图View是一种虚拟存在的表，视图中的数据并不在数据库中实际存在，行和列数据来自定义视图中使用的表，并且是在使用视图时动态生成的。 简单的来说，视图不保存数据，只是保存了查询的SQL逻辑，不保存查询的结果。所以我们在创建视图的时候，主要的工作就落在创建这条SQL查询语句上。 简单理解 可以理解为给SQL语句设置别名，我们在使用的时候可以直接使用别名进行子查询、联合查询等操作。","head":[["meta",{"property":"og:url","content":"https://www.codermast.com/database/mysql/mysql-view.html"}],["meta",{"property":"og:site_name","content":"CoderMast编程桅杆"}],["meta",{"property":"og:title","content":"MySQL进阶 - 视图"}],["meta",{"property":"og:description","content":"MySQL进阶 - 视图 介绍和基本语法 介绍 视图View是一种虚拟存在的表，视图中的数据并不在数据库中实际存在，行和列数据来自定义视图中使用的表，并且是在使用视图时动态生成的。 简单的来说，视图不保存数据，只是保存了查询的SQL逻辑，不保存查询的结果。所以我们在创建视图的时候，主要的工作就落在创建这条SQL查询语句上。 简单理解 可以理解为给SQL语句设置别名，我们在使用的时候可以直接使用别名进行子查询、联合查询等操作。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-13T13:14:10.000Z"}],["meta",{"property":"article:author","content":"CoderMast"}],["meta",{"property":"article:modified_time","content":"2023-06-13T13:14:10.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"MySQL进阶 - 视图\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-06-13T13:14:10.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"CoderMast\\",\\"url\\":\\"https://www.codermast.com\\",\\"email\\":\\"codermast@qq.com\\"}]}"]]},"headers":[{"level":2,"title":"介绍和基本语法","slug":"介绍和基本语法","link":"#介绍和基本语法","children":[{"level":3,"title":"介绍","slug":"介绍","link":"#介绍","children":[]},{"level":3,"title":"操作语法","slug":"操作语法","link":"#操作语法","children":[]}]},{"level":2,"title":"检查选项","slug":"检查选项","link":"#检查选项","children":[]},{"level":2,"title":"更新及作用","slug":"更新及作用","link":"#更新及作用","children":[{"level":3,"title":"视图的更新","slug":"视图的更新","link":"#视图的更新","children":[]},{"level":3,"title":"视图的作用","slug":"视图的作用","link":"#视图的作用","children":[]}]}],"git":{"createdTime":1686662050000,"updatedTime":1686662050000,"contributors":[{"name":"codermast","email":"codermast@qq.com","commits":1}]},"readingTime":{"minutes":2.62,"words":785},"filePathRelative":"database/mysql/mysql-view.md","localizedDate":"2023年6月13日","excerpt":"<h1> MySQL进阶 - 视图</h1>\\n<h2> 介绍和基本语法</h2>\\n<h3> 介绍</h3>\\n<p>视图View是一种虚拟存在的表，视图中的数据并不在数据库中实际存在，行和列数据来自定义视图中使用的表，并且是在使用视图时动态生成的。</p>\\n<p>简单的来说，视图不保存数据，只是保存了查询的SQL逻辑，不保存查询的结果。所以我们在创建视图的时候，主要的工作就落在创建这条SQL查询语句上。</p>\\n<div class=\\"hint-container info\\">\\n<p class=\\"hint-container-title\\">简单理解</p>\\n<p>可以理解为给SQL语句设置别名，我们在使用的时候可以直接使用别名进行子查询、联合查询等操作。</p>\\n</div>","autoDesc":true}');export{e as data};
